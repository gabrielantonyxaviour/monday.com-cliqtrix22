
response = Map();
tasks = invokeurl
[
	url :"https://api.monday.com/v2/"
	type :POST
	parameters:{"query":"query { boards (order_by:used_at) { name items(newest_first:true){id name group{title} column_values( ids: [\"people07\"] ){ text title  } }}}"}
	connection:"read_users_board_data"
];
username = invokeurl
[
	url :"https://api.monday.com/v2/"
	type :POST
	parameters:{"query":"query { me { name }}"}
	connection:"read_personal_info"
];
USERNAME = username.get("data").get("me").get("name");
Boards = tasks.get("data").get("boards");
teamnames = invokeurl
[
	url :"https://api.monday.com/v2/"
	type :POST
	parameters:{"query":"query {  me { teams { name } } }"}
	connection:"read_personal_info"
];
card = {"theme":"modern-inline","title":"Good Morning!","thumbnail":"https://media.tenor.com/images/30f182757d871f1e498d253089af89be/tenor.gif"};
response.put("card",card);
slides_map = Map();
slides_map.put("type","table");
slides = List();
slides.add(slides_map);
response.put("slides",slides);
slides_data = Map();
slides_map.put("data",slides_data);
slides_data.put("headers",{"S. no","Assignee Name","Board Name","Group Name","Item Name","Role Name"});
rows = List();
slides_data.put("rows",rows);
facts = invokeurl
[
	url :"https://random-facts2.p.rapidapi.com/getfact"
	type :GET
	parameters:{"format":"json"}
	headers:{"x-rapidapi-host":"random-facts2.p.rapidapi.com","x-rapidapi-key":"d77878f019mshb86b56759562ea1p13048ejsneda9faebabc4"}
];
fact = facts.get("Fact");
response.put("text","Hey " + user.get("first_name") + ", I have a fact for you :happy!: \n \n*Did you know?* :thinking!: \n\n" + fact + "\n\n(Facts fetched via API calls)" + " \n\nAll the latest tasks that are assigned to you and your team are displayed below.");
index = 1;
TEAMNAMES = teamnames.get("data").get("me").get("teams");
for each  board in Boards
{
	items = board.get("items");
	boardname = board.get("name");
	for each  item in items
	{
		roles = item.get("column_values");
		itemname = item.get("name");
		groupname = item.get("group").get("title");
		if(roles.isEmpty())
		{
			continue;
		}
		for each  role in roles
		{
			for each  team in TEAMNAMES
			{
				if(role.get("text") == team.get("name") || role.get("text") == USERNAME)
				{
					row_data = Map();
					rows.add(row_data);
					row_data.put("S. no",index);
					if(role.get("text") == team.get("name"))
					{
						row_data.put("Assignee Name",team.get("name"));
					}
					else
					{
						row_data.put("Assignee Name",USERNAME);
					}
					row_data.put("Board Name",boardname);
					row_data.put("Group Name",groupname);
					row_data.put("Role Name",role.get("title"));
					row_data.put("Item Name",itemname);
					index = index + 1;
				}
			}
		}
	}
}
zoho.cliq.postToBot("mondaybot",response);
